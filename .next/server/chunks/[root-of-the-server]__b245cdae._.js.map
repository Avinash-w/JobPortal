{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Hp/Desktop/job-portal/frontend/lib/db.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst MONGODB_URI = process.env.MONGODB_URI;\n\nif (!MONGODB_URI) {\n  throw new Error(\"Please define the MONGODB_URI environment variable in .env.local\");\n}\n\nlet cached = global.mongoose;\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function connectDB() {\n  if (cached.conn) return cached.conn;\n\n  if (!cached.promise) {\n    cached.promise = mongoose.connect(MONGODB_URI, {\n      bufferCommands: false,\n    }).then((mongoose) => {\n      return mongoose;\n    });\n  }\n\n  cached.conn = await cached.promise;\n  return cached.conn;\n}\n\nexport default connectDB;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE,OAAO,OAAO,IAAI;IAEnC,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa;YAC7C,gBAAgB;QAClB,GAAG,IAAI,CAAC,CAAC;YACP,OAAO;QACT;IACF;IAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Hp/Desktop/job-portal/frontend/models/User.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst UserSchema = new mongoose.Schema(\n  {\n    name: String,\n    email: {\n      type: String,\n      unique: true,\n      required: true,\n    },\n    phone: {\n      type: String,\n      unique: true,\n      required: true,\n    },\n    profileImage: String,\n    password: {\n      type: String,\n      required: true,\n    },\n    experienceLevel: String,\n    city: String,\n    workStatus: String,\n    // You can add more fields later like alternateNumber, profileImage, etc.\n  },\n  { timestamps: true }\n);\n\nexport default mongoose.models.User || mongoose.model(\"User\", UserSchema);\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CACpC;IACE,MAAM;IACN,OAAO;QACL,MAAM;QACN,QAAQ;QACR,UAAU;IACZ;IACA,OAAO;QACL,MAAM;QACN,QAAQ;QACR,UAAU;IACZ;IACA,cAAc;IACd,UAAU;QACR,MAAM;QACN,UAAU;IACZ;IACA,iBAAiB;IACjB,MAAM;IACN,YAAY;AAEd,GACA;IAAE,YAAY;AAAK;uCAGN,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Hp/Desktop/job-portal/frontend/pages/api/uploadProfileImage.js"],"sourcesContent":["// import formidable from \"formidable\";\r\n// import fs from \"fs\";\r\n// import path from \"path\";\r\n// import User from \"../../models/User\";\r\n// import dbConnect from \"../../lib/db\";\r\n\r\n// export const config = {\r\n//   api: {\r\n//     bodyParser: false,\r\n//   },\r\n// };\r\n\r\n// export default async function handler(req, res) {\r\n//   await dbConnect();\r\n\r\n//   const uploadDir = path.join(process.cwd(), \"public\", \"uploads\");\r\n\r\n//   if (!fs.existsSync(uploadDir)) {\r\n//     fs.mkdirSync(uploadDir, { recursive: true });\r\n//   }\r\n\r\n//   const form = formidable({\r\n//     uploadDir,\r\n//     keepExtensions: true,\r\n//     multiples: false,\r\n//   });\r\n\r\n//   form.parse(req, async (err, fields, files) => {\r\n//     if (err) {\r\n//       console.error(\"Form parse error:\", err);\r\n//       return res.status(500).json({ error: \"Upload failed during parsing\" });\r\n//     }\r\n\r\n//     const { userId } = fields;\r\n\r\n//     const uploadedFile = files.profileImage;\r\n//     if (!uploadedFile || !uploadedFile.filepath) {\r\n//       return res.status(400).json({ error: \"No image uploaded\" });\r\n//     }\r\n\r\n//     const imageName = path.basename(uploadedFile.filepath);\r\n//     const imagePath = \"/uploads/\" + imageName;\r\n\r\n//     try {\r\n//       await User.findByIdAndUpdate(userId, { profileImage: imagePath });\r\n//       res.status(200).json({ imagePath });\r\n//     } catch (error) {\r\n//       console.error(\"DB update error:\", error);\r\n//       res.status(500).json({ error: \"Failed to update user\" });\r\n//     }\r\n//   });\r\n// }\r\nconst nextConnect = require('next-connect');\r\nconst multer = require('multer');\r\nconst path = require('path');\r\nconst fs = require('fs');\r\nconst dbConnect = require('../../lib/db');\r\nconst User = require('../../models/User');\r\n\r\n// Set up multer\r\nconst upload = multer({\r\n  storage: multer.diskStorage({\r\n    destination: './public/uploads',\r\n    filename: (req, file, cb) => {\r\n      const uniqueName = `${Date.now()}-${file.originalname}`;\r\n      cb(null, uniqueName);\r\n    },\r\n  }),\r\n});\r\n\r\nconst apiRoute = nextConnect({\r\n  onError(error, req, res) {\r\n    console.error('Upload Error:', error);\r\n    res.status(500).json({ error: `Something went wrong: ${error.message}` });\r\n  },\r\n  onNoMatch(req, res) {\r\n    res.status(405).json({ error: `Method ${req.method} not allowed` });\r\n  },\r\n});\r\n\r\napiRoute.use(upload.single('file'));\r\n\r\napiRoute.post(async (req, res) => {\r\n  await dbConnect();\r\n\r\n  const userId = req.body.userId;\r\n  const filePath = `/uploads/${req.file.filename}`;\r\n\r\n  try {\r\n    const updatedUser = await User.findByIdAndUpdate(\r\n      userId,\r\n      { profileImage: filePath },\r\n      { new: true }\r\n    );\r\n\r\n    res.status(200).json({\r\n      message: 'Image uploaded successfully',\r\n      imageUrl: filePath,\r\n      user: updatedUser,\r\n    });\r\n  } catch (error) {\r\n    console.error('Error saving image path to DB:', error);\r\n    res.status(400).json({ error: 'Failed to update user' });\r\n  }\r\n});\r\n\r\nmodule.exports = apiRoute;\r\n\r\nmodule.exports.config = {\r\n  api: {\r\n    bodyParser: false, // Required for multer\r\n  },\r\n};\r\n\r\n"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,uBAAuB;AACvB,2BAA2B;AAC3B,wCAAwC;AACxC,wCAAwC;AAExC,0BAA0B;AAC1B,WAAW;AACX,yBAAyB;AACzB,OAAO;AACP,KAAK;AAEL,oDAAoD;AACpD,uBAAuB;AAEvB,qEAAqE;AAErE,qCAAqC;AACrC,oDAAoD;AACpD,MAAM;AAEN,8BAA8B;AAC9B,iBAAiB;AACjB,4BAA4B;AAC5B,wBAAwB;AACxB,QAAQ;AAER,oDAAoD;AACpD,iBAAiB;AACjB,iDAAiD;AACjD,gFAAgF;AAChF,QAAQ;AAER,iCAAiC;AAEjC,+CAA+C;AAC/C,qDAAqD;AACrD,qEAAqE;AACrE,QAAQ;AAER,8DAA8D;AAC9D,iDAAiD;AAEjD,YAAY;AACZ,2EAA2E;AAC3E,6CAA6C;AAC7C,wBAAwB;AACxB,kDAAkD;AAClD,kEAAkE;AAClE,QAAQ;AACR,QAAQ;AACR,IAAI;AACJ,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AAEN,gBAAgB;AAChB,MAAM,SAAS,OAAO;IACpB,SAAS,OAAO,WAAW,CAAC;QAC1B,aAAa;QACb,UAAU,CAAC,KAAK,MAAM;YACpB,MAAM,aAAa,GAAG,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,YAAY,EAAE;YACvD,GAAG,MAAM;QACX;IACF;AACF;AAEA,MAAM,WAAW,YAAY;IAC3B,SAAQ,KAAK,EAAE,GAAG,EAAE,GAAG;QACrB,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO,CAAC,sBAAsB,EAAE,MAAM,OAAO,EAAE;QAAC;IACzE;IACA,WAAU,GAAG,EAAE,GAAG;QAChB,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO,CAAC,OAAO,EAAE,IAAI,MAAM,CAAC,YAAY,CAAC;QAAC;IACnE;AACF;AAEA,SAAS,GAAG,CAAC,OAAO,MAAM,CAAC;AAE3B,SAAS,IAAI,CAAC,OAAO,KAAK;IACxB,MAAM;IAEN,MAAM,SAAS,IAAI,IAAI,CAAC,MAAM;IAC9B,MAAM,WAAW,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE;IAEhD,IAAI;QACF,MAAM,cAAc,MAAM,KAAK,iBAAiB,CAC9C,QACA;YAAE,cAAc;QAAS,GACzB;YAAE,KAAK;QAAK;QAGd,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YACnB,SAAS;YACT,UAAU;YACV,MAAM;QACR;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAwB;IACxD;AACF;AAEA,OAAO,OAAO,GAAG;AAEjB,OAAO,OAAO,CAAC,MAAM,GAAG;IACtB,KAAK;QACH,YAAY;IACd;AACF","debugId":null}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Hp/Desktop/job-portal/frontend/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.dev.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n    }\n  } else {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1C,IAAIN,QAAQC,GAAG,CAACM,SAAS,eAAE;YACzBJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO;;QAEP;IACF,OAAO;;IAMP;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Hp/Desktop/job-portal/frontend/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Hp/Desktop/job-portal/frontend/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Hp/Desktop/job-portal/frontend/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,6HAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,6HAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}}]
}